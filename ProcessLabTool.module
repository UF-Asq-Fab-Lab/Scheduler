<?php

/**
 * Infinity Fab Lab Charge Process Module
 *
 * Developed for the Infinity Fab Lab at the University of Florida.
 * Lists and allows adding and editing Lab Charge pages.
 *
 * Thomas R Storey, 2015
 * Licensed under MIT License, see LICENSE.TXT
 *
 * http://fablab.arts.ufl.edu
 * https://github.com/UF-Asq-Fab-Lab
 */

class ProcessLabTool extends ProcessPageType {

	static public function getModuleInfo() {
		return array(
			'title'      => __('Lab Tools', __FILE__), // getModuleInfo title
			'version'    => 100,
			'summary'    => __('Manage lab tools', __FILE__), // getModuleInfo summary
			'permission' => 'user-admin',
			'icon'       => 'paint-brush',
      'requires'   => array('LabScheduler'),
			'permission' => 'scheduler-edit',
			'useNavJSON' => true,
		);
	}

	public function __construct() {
		$this->set("maxAjaxQty", 25);
		return parent::__construct();
    $showFields = array(
			'title',
			'lab_tool_available',
			'lab_tool_status',
      'lab_tool_ruleset',
      'lab_tool_color',
    );
		$this->set('showFields', $showFields);
	}

	public function init() {
		parent::init();
		$this->addHookAfter('ProcessPageAdd::buildForm', $this, 'hookAfterPageAddBuildForm');

	}

	protected function useLister() {
		return true;
	}

	public function ___executeEdit() {
		$out = parent::___executeEdit();
		return $out;
	}

	protected function hookAfterPageAddBuildForm(HookEvent $event){
		$form = $event->return;
		$formSave = $form->children('name=submit_save')->first();
		// ruleset
		$field = $this->wire('fields')->get('lab_tool_ruleset')->getInputfield(new NullPage());
		$form->insertBefore($field, $formSave);
		// color
		$field = $this->wire('fields')->get('lab_tool_color')->getInputfield(new NullPage());
		$form->insertBefore($field, $formSave);
		// status
		$field = $this->wire('fields')->get('lab_tool_status')->getInputfield(new NullPage());
		$field->value = "OK";
		$form->insertBefore($field, $formSave);
		// available
		$field = $this->wire('fields')->get('lab_tool_available')->getInputfield(new NullPage());
		$field->value = 1;
		$field->attr("checked", true);
		$form->insertBefore($field, $formSave);


		$event->return = $form;
	}
}
?>
